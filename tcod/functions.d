module tcod.functions;

import std.loader;

import tcod.base;
import tcod.types;

extern (C):

// --- bresenham.d ---
void function(int, int, int, int) TCOD_line_init;
bool function(int*, int*) TCOD_line_step;
bool function(int, int, int, int, TCOD_line_listener_t) TCOD_line;
void function(int, int, int, int, TCOD_bresenham_data_t*) TCOD_line_init_mt;
bool function(int*, int*, TCOD_bresenham_data_t*) TCOD_line_step_mt;
bool function(int, int, int, int, TCOD_line_listener_t, TCOD_bresenham_data_t*) TCOD_line_mt;

// --- bsp.d ---
TCOD_bsp_t* function() TCOD_bsp_new;
TCOD_bsp_t* function(int, int, int, int) TCOD_bsp_new_with_size;
void function(TCOD_bsp_t*) TCOD_bsp_delete;
TCOD_bsp_t* function(TCOD_bsp_t*) TCOD_bsp_left;
TCOD_bsp_t* function(TCOD_bsp_t*) TCOD_bsp_right;
TCOD_bsp_t* function(TCOD_bsp_t*) TCOD_bsp_father;
bool function(TCOD_bsp_t*) TCOD_bsp_is_leaf;
bool function(TCOD_bsp_t*, TCOD_bsp_callback_t, void*) TCOD_bsp_traverse_pre_order;
bool function(TCOD_bsp_t*, TCOD_bsp_callback_t, void*) TCOD_bsp_traverse_in_order;
bool function(TCOD_bsp_t*, TCOD_bsp_callback_t, void*) TCOD_bsp_traverse_post_order;
bool function(TCOD_bsp_t*, TCOD_bsp_callback_t, void*) TCOD_bsp_traverse_level_order;
bool function(TCOD_bsp_t*, TCOD_bsp_callback_t, void*) TCOD_bsp_traverse_inverted_level_order;
bool function(TCOD_bsp_t*, int, int) TCOD_bsp_contains;
TCOD_bsp_t* function(TCOD_bsp_t*, int, int) TCOD_bsp_find_node;
void function(TCOD_bsp_t*, int, int, int, int) TCOD_bsp_resize;
void function(TCOD_bsp_t*, bool, int) TCOD_bsp_split_once;
void function(TCOD_bsp_t*, TCOD_random_t, int, int, int, float, float) TCOD_bsp_split_recursive;
void function(TCOD_bsp_t*) TCOD_bsp_remove_sons;

// --- color.d ---
bool function(TCOD_color_t, TCOD_color_t) TCOD_color_equals;
TCOD_color_t function(TCOD_color_t, TCOD_color_t) TCOD_color_add;
TCOD_color_t function(TCOD_color_t, TCOD_color_t) TCOD_color_subtract;
TCOD_color_t function(TCOD_color_t, TCOD_color_t) TCOD_color_multiply;
TCOD_color_t function(TCOD_color_t, TCOD_color_t, float) TCOD_color_multiply_scalar;
TCOD_color_t function(TCOD_color_t, TCOD_color_t, float) TCOD_color_lerp;
void function(TCOD_color_t*, float, float, float) TCOD_color_set_HSV;
void function(TCOD_color_t, float*, float*, float*) TCOD_color_get_HSV;
void function(TCOD_color_t*, int, TCOD_color_t*, int*) TCOD_color_gen_map;

// --- console.d ---
void function(int, int, charptr, bool) TCOD_console_init_root;
void function(charptr) TCOD_console_set_window_title;
void function(bool) TCOD_console_set_fullscreen;
bool function() TCOD_console_is_fullscreen;
bool function() TCOD_console_is_window_closed;
void function(charptr, int, int, int) TCOD_console_set_custom_font;
void function(int, int, int) TCOD_console_map_ascii_code_to_font;
void function(int, int, int, int) TCOD_console_map_ascii_codes_to_font;
void function(charptr, int, int) TCOD_console_map_string_to_font;
void function(TCOD_console_t, TCOD_color_t) TCOD_console_set_background_color;
void function(TCOD_console_t, TCOD_color_t) TCOD_console_set_foreground_color;
void function(TCOD_console_t) TCOD_console_clear;
void function(TCOD_console_t, int, int, TCOD_color_t, TCOD_bkgnd_flag_t) TCOD_console_set_back;
void function(TCOD_console_t, int, int, TCOD_color_t) TCOD_console_set_fore;
void function(TCOD_console_t, int, int, int) TCOD_console_set_char;
void function(TCOD_console_t, int, int, int, TCOD_bkgnd_flag_t) TCOD_console_put_char;
void function(TCOD_console_t, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_left;
void function(TCOD_console_t, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_right;
void function(TCOD_console_t, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_center;
int function(TCOD_console_t, int, int, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_left_rect;
int function(TCOD_console_t, int, int, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_right_rect;
int function(TCOD_console_t, int, int, int, int, TCOD_bkgnd_flag_t, charptr, ...) TCOD_console_print_center_rect;
int function(TCOD_console_t, int, int, int, int, charptr, ...) TCOD_console_height_left_rect;
int function(TCOD_console_t, int, int, int, int, charptr, ...) TCOD_console_height_right_rect;
int function(TCOD_console_t, int, int, int, int, charptr, ...) TCOD_console_height_center_rect;
void function(TCOD_console_t, int, int, int, int, bool, TCOD_bkgnd_flag_t) TCOD_console_rect;
void function(TCOD_console_t, int, int, int, TCOD_bkgnd_flag_t) TCOD_console_hline;
void function(TCOD_console_t, int, int, int, TCOD_bkgnd_flag_t) TCOD_console_vline;
void function(TCOD_console_t, int, int, int, int, bool, charptr, ...) TCOD_console_print_frame;
TCOD_color_t function(TCOD_console_t) TCOD_console_get_background_color;
TCOD_color_t function(TCOD_console_t) TCOD_console_get_foreground_color;
TCOD_color_t function(TCOD_console_t, int, int) TCOD_console_get_back;
TCOD_color_t function(TCOD_console_t, int, int) TCOD_console_get_fore;
int function(TCOD_console_t, int, int) TCOD_console_get_char;
void function(ubyte, TCOD_color_t) TCOD_console_set_fade;
ubyte function() TCOD_console_get_fade;
TCOD_color_t function() TCOD_console_get_fading_color;
void function() TCOD_console_flush;
void function(TCOD_colctrl_t, TCOD_color_t, TCOD_color_t) TCOD_console_set_color_control;
TCOD_key_t function(int) TCOD_console_check_for_keypress;
TCOD_key_t function(bool) TCOD_console_wait_for_keypress;
void function(int, int) TCOD_console_set_keyboard_repeat;
void function() TCOD_console_disable_keyboard_repeat;
bool function(TCOD_keycode_t) TCOD_console_is_key_pressed;
TCOD_console_t function(int, int) TCOD_console_new;
int function(TCOD_console_t) TCOD_console_get_width;
int function(TCOD_console_t) TCOD_console_get_height;
void function(TCOD_console_t, TCOD_color_t) TCOD_console_set_key_color;
void function(TCOD_console_t, int, int, int, int, TCOD_console_t, int, int, float, float) TCOD_console_blit;
void function(TCOD_console_t) TCOD_console_delete;
void function() TCOD_console_credits;
bool function(int, int, bool) TCOD_console_credits_render;

// --- fov.d ---
TCOD_map_t function(int, int) TCOD_map_new;
void function(TCOD_map_t) TCOD_map_clear;
void function(TCOD_map_t, TCOD_map_t) TCOD_map_copy;
void function(TCOD_map_t, int, int, bool, bool) TCOD_map_set_properties;
void function(TCOD_map_t) TCOD_map_delete;
void function(TCOD_map_t, int, int, int, bool, TCOD_fov_algorithm_t) TCOD_map_compute_fov;
bool function(TCOD_map_t, int, int) TCOD_map_is_in_fov;
void function(TCOD_map_t, int, int, bool) TCOD_map_set_in_fov;
bool function(TCOD_map_t, int, int) TCOD_map_is_transparent;
bool function(TCOD_map_t, int, int) TCOD_map_is_walkable;
int function(TCOD_map_t) TCOD_map_get_width;
int function(TCOD_map_t) TCOD_map_get_height;
int function(TCOD_map_t) TCOD_map_get_nb_cells;

// --- heightmap.d ---
TCOD_heightmap_t* function(int, int) TCOD_heightmap_new;
void function(TCOD_heightmap_t*) TCOD_heightmap_delete;
float function(TCOD_heightmap_t*, int, int) TCOD_heightmap_get_value;
float function(TCOD_heightmap_t*, float, float) TCOD_heightmap_get_interpolated_value;
void function(TCOD_heightmap_t*, int, int, float) TCOD_heightmap_set_value;
float function(TCOD_heightmap_t*, int, int) TCOD_heightmap_get_slope;
void function(TCOD_heightmap_t*, float, float, float[3], float) TCOD_heightmap_get_normal;
int function(TCOD_heightmap_t*, float, float) TCOD_heightmap_count_cells;
bool function(TCOD_heightmap_t*, float) TCOD_heightmap_has_land_on_border;
void function(TCOD_heightmap_t*, float*, float*) TCOD_heightmap_get_minmax;
void function(TCOD_heightmap_t*, float) TCOD_heightmap_add;
void function(TCOD_heightmap_t*, float) TCOD_heightmap_scale;
void function(TCOD_heightmap_t*, float, float) TCOD_heightmap_clamp;
void function(TCOD_heightmap_t*, float, float) TCOD_heightmap_normalize;
void function(TCOD_heightmap_t*) TCOD_heightmap_clear;
void function(TCOD_heightmap_t*, TCOD_heightmap_t*, TCOD_heightmap_t*, float) TCOD_heightmap_lerp_hm;
void function(TCOD_heightmap_t*, TCOD_heightmap_t*, TCOD_heightmap_t*) TCOD_heightmap_add_hm;
void function(TCOD_heightmap_t*, TCOD_heightmap_t*, TCOD_heightmap_t*) TCOD_heightmap_multiply_hm;
void function(TCOD_heightmap_t*, float, float, float, float) TCOD_heightmap_add_hill;
void function(TCOD_heightmap_t*, float, float, float, float) TCOD_heightmap_dig_hill;
void function(TCOD_heightmap_t*, int[4], int[4], float, float, float, float) TCOD_heightmap_dig_bezier;
void function(TCOD_heightmap_t*, int, float, float, TCOD_random_t) TCOD_heightmap_rain_erosion;
void function(TCOD_heightmap_t*, int, int*, int*, float*, float, float) TCOD_heightmap_kernel_transform;
void function(TCOD_heightmap_t*, int, int, float*, TCOD_random_t) TCOD_heightmap_add_voronoi;
void function(TCOD_heightmap_t*, TCOD_noise_t, float, float, float, float, float, float, float) TCOD_heightmap_add_fbm;
void function(TCOD_heightmap_t*, TCOD_noise_t, float, float, float, float, float, float, float) TCOD_heightmap_scale_fbm;
void function(TCOD_heightmap_t*, float, TCOD_random_t) TCOD_heightmap_islandify;


// --- image.d ---
TCOD_image_t function(int, int) TCOD_image_new;
TCOD_image_t function(TCOD_console_t) TCOD_image_from_console;
void function(TCOD_image_t, TCOD_console_t) TCOD_image_refresh_console;
TCOD_image_t function(charptr) TCOD_image_load;
void function(TCOD_image_t, TCOD_color_t) TCOD_image_clear;
void function(TCOD_image_t) TCOD_image_invert;
void function(TCOD_image_t) TCOD_image_hflip;
void function(TCOD_image_t) TCOD_image_vflip;
void function(TCOD_image_t, int, int) TCOD_image_scale;
void function(TCOD_image_t, charptr) TCOD_image_save;
void function(TCOD_image_t, int*, int*) TCOD_image_get_size;
TCOD_color_t function(TCOD_image_t, int, int) TCOD_image_get_pixel;
int function(TCOD_image_t, int, int) TCOD_image_get_alpha;
TCOD_color_t function(TCOD_image_t, float, float, float, float) TCOD_image_get_mipmap_pixel;
void function(TCOD_image_t, int, int, TCOD_color_t) TCOD_image_put_pixel;
void function(TCOD_image_t, TCOD_console_t, float, float, TCOD_bkgnd_flag_t, float, float, float) TCOD_image_blit;
void function(TCOD_image_t, TCOD_console_t, int, int, int, int, TCOD_bkgnd_flag_t) TCOD_image_blit_rect;
void function(TCOD_image_t) TCOD_image_delete;
void function(TCOD_image_t, TCOD_color_t) TCOD_image_set_key_color;
bool function(TCOD_image_t, int, int) TCOD_image_is_pixel_transparent;

// --- lex.d ---
TCOD_lex_t* function() TCOD_lex_new_intern;
TCOD_lex_t* function(charptr*, charptr*, charptr, charptr, charptr, charptr, charptr, int) TCOD_lex_new;
void function(TCOD_lex_t*) TCOD_lex_delete;
void function(TCOD_lex_t*, char* dat) TCOD_lex_set_data_buffer;
bool function(TCOD_lex_t*, charptr filename) TCOD_lex_set_data_file;
int function(TCOD_lex_t*) TCOD_lex_parse;
int function(TCOD_lex_t*, int) TCOD_lex_parse_until_token_type;
int function(TCOD_lex_t*, charptr) TCOD_lex_parse_until_token_value;
bool function(TCOD_lex_t*, int) TCOD_lex_expect_token_type;
bool function(TCOD_lex_t*, int, charptr) TCOD_lex_expect_token_value;
void function(TCOD_lex_t*, TCOD_lex_t*) TCOD_lex_savepoint;
void function(TCOD_lex_t*, TCOD_lex_t*) TCOD_lex_restore;
char* function(TCOD_lex_t*) TCOD_lex_get_last_javadoc;
char* function(int) TCOD_lex_get_token_name;
char* function() TCOD_lex_get_last_error;
int function(char) TCOD_lex_hextoint;

// --- list.d ---
TCOD_list_t function() TCOD_list_new;
TCOD_list_t function(int) TCOD_list_allocate;
TCOD_list_t function(TCOD_list_t) TCOD_list_duplicate;
void function(TCOD_list_t) TCOD_list_delete;
void function(TCOD_list_t, void*) TCOD_list_push;
void* function(TCOD_list_t) TCOD_list_pop;
void* function(TCOD_list_t) TCOD_list_peek;
void function(TCOD_list_t, TCOD_list_t) TCOD_list_add_all;
void* function(TCOD_list_t, int) TCOD_list_get;
void function(TCOD_list_t, void*, int) TCOD_list_set;
void** function(TCOD_list_t) TCOD_list_begin;
void** function(TCOD_list_t) TCOD_list_end;
void** function(TCOD_list_t, void*) TCOD_list_remove_iterator;
void function(TCOD_list_t, void*) TCOD_list_remove;
void** function(TCOD_list_t, void*) TCOD_list_remove_iterator_fast;
bool function(TCOD_list_t, void*) TCOD_list_contains;
void function(TCOD_list_t) TCOD_list_clear;
void function(TCOD_list_t) TCOD_list_clear_and_delete;
int function(TCOD_list_t) TCOD_list_size;
void** function(TCOD_list_t, void*, int) TCOD_list_insert_before;
bool function(TCOD_list_t) TCOD_list_is_empty;

// --- mersenne.d ---
TCOD_random_t function() TCOD_random_get_instance;
TCOD_random_t function() TCOD_random_new;
TCOD_random_t function(TCOD_random_t) TCOD_random_save;
void function(TCOD_random_t, TCOD_random_t) TCOD_random_restore;
TCOD_random_t function(uint) TCOD_random_new_from_seed;
int function(TCOD_random_t, int, int) TCOD_random_get_int;
float function(TCOD_random_t, float, float) TCOD_random_get_float;
int function(int, int, charptr, int) TCOD_random_get_int_from_byte_array;
void function(TCOD_random_t) TCOD_random_delete;

// --- mouse.d ---
TCOD_mouse_t function() TCOD_mouse_get_status;
void function(bool) TCOD_mouse_show_cursor;
bool function() TCOD_mouse_is_cursor_visible;
void function(int, int) TCOD_mouse_move;

// --- noise.d ---
TCOD_noise_t function(int, float, float, TCOD_random_t) TCOD_noise_new;
float function(TCOD_noise_t, float*) TCOD_noise_perlin;
float function(TCOD_noise_t, float*, float) TCOD_noise_fbm_perlin;
float function(TCOD_noise_t, float*, float) TCOD_noise_turbulence_perlin;
float function(TCOD_noise_t, float*) TCOD_noise_simplex;
float function(TCOD_noise_t, float*, float) TCOD_noise_fbm_simplex;
float function(TCOD_noise_t, float*, float) TCOD_noise_turbulence_simplex;
float function(TCOD_noise_t, float*) TCOD_noise_wavelet;
float function(TCOD_noise_t, float*, float) TCOD_noise_fbm_wavelet;
float function(TCOD_noise_t, float*, float) TCOD_noise_turbulence_wavelet;
void function(TCOD_noise_t) TCOD_noise_delete;

// --- parser.d ---
char* function(TCOD_parser_struct_t) TCOD_struct_get_name;
void function(TCOD_parser_struct_t, charptr, TCOD_value_type_t, bool) TCOD_struct_add_property;
void function(TCOD_parser_struct_t, charptr, TCOD_value_type_t, bool) TCOD_struct_add_list_property;
void function(TCOD_parser_struct_t, charptr, charptr*, bool) TCOD_struct_add_value_list;
void function(TCOD_parser_struct_t, charptr, charptr*, int, bool) TCOD_struct_add_value_list_sized;
void function(TCOD_parser_struct_t, charptr) TCOD_struct_add_flag;
void function(TCOD_parser_struct_t, TCOD_parser_struct_t) TCOD_struct_add_structure;
bool function(TCOD_parser_struct_t, charptr) TCOD_struct_is_mandatory;
TCOD_value_type_t function(TCOD_parser_struct_t, charptr) TCOD_struct_get_type;
TCOD_parser_t function() TCOD_parser_new;
TCOD_parser_struct_t function(TCOD_parser_t, charptr) TCOD_parser_new_struct;
TCOD_parser_struct_t function(TCOD_parser_t, TCOD_parser_custom_t) TCOD_parser_new_custom_type;
void function(TCOD_parser_t, charptr, TCOD_parser_listener_t*) TCOD_parser_run;
void function(TCOD_parser_t) TCOD_parser_delete;
void function(charptr, ...) TCOD_parser_error;
bool function(TCOD_parser_t, charptr) TCOD_parser_get_bool_property;
int function(TCOD_parser_t, charptr) TCOD_parser_get_char_property;
int function(TCOD_parser_t, charptr) TCOD_parser_get_int_property;
float function(TCOD_parser_t, charptr) TCOD_parser_get_float_property;
charptr function(TCOD_parser_t, charptr) TCOD_parser_get_string_property;
TCOD_color_t function(TCOD_parser_t, charptr) TCOD_parser_get_color_property;
TCOD_dice_t function(TCOD_parser_t, charptr) TCOD_parser_get_dice_property;
void function(TCOD_parser_t, charptr, TCOD_dice_t*) TCOD_parser_get_dice_property_py;
void* function(TCOD_parser_t, charptr) TCOD_parser_get_custom_property;
TCOD_list_t function(TCOD_parser_t, charptr, TCOD_value_type_t) TCOD_parser_get_list_property;
TCOD_value_t function() TCOD_parse_bool_value;
TCOD_value_t function() TCOD_parse_char_value;
TCOD_value_t function() TCOD_parse_integer_value;
TCOD_value_t function() TCOD_parse_float_value;
TCOD_value_t function() TCOD_parse_string_value;
TCOD_value_t function() TCOD_parse_color_value;
TCOD_value_t function() TCOD_parse_dice_value;
TCOD_value_t function(TCOD_struct_int_t*, int) TCOD_parse_value_list_value;
TCOD_value_t function(TCOD_parser_int_t*, TCOD_parser_struct_t, charptr, bool) TCOD_parse_property_value;

// --- path.d ---
TCOD_path_t function(TCOD_map_t, float) TCOD_path_new_using_map;
TCOD_path_t function(int, int, TCOD_path_func_t, void*, float) TCOD_path_new_using_function;
bool function(TCOD_path_t, int, int, int, int) TCOD_path_compute;
bool function(TCOD_path_t, int*, int*, bool) TCOD_path_walk;
bool function(TCOD_path_t) TCOD_path_is_empty;
int function(TCOD_path_t) TCOD_path_size;
void function(TCOD_path_t, int, int*, int*) TCOD_path_get;
void function(TCOD_path_t, int*, int*) TCOD_path_get_origin;
void function(TCOD_path_t, int*, int*) TCOD_path_get_destination;
void function(TCOD_path_t) TCOD_path_delete;

// --- sys.d ---
uint function() TCOD_sys_elapsed_milli;
float function() TCOD_sys_elapsed_seconds;
void function(uint) TCOD_sys_sleep_milli;
void function(charptr) TCOD_sys_save_screenshot;
void function(int, int) TCOD_sys_force_fullscreen_resolution;
void function(int) TCOD_sys_set_fps;
int function() TCOD_sys_get_fps;
float function() TCOD_sys_get_last_frame_length;
void function(int*, int*) TCOD_sys_get_current_resolution;
void function(int, int, int, TCOD_image_t, int, int) TCOD_sys_update_char;
bool function(charptr) TCOD_sys_create_directory;
bool function(charptr) TCOD_sys_delete_file;
bool function(charptr) TCOD_sys_delete_directory;
TCOD_thread_t function(int) TCOD_thread_new;
void function(TCOD_thread_t) TCOD_thread_delete;
int function() TCOD_sys_get_num_cores;
TCOD_mutex_t function() TCOD_mutex_new;
void function(TCOD_mutex_t) TCOD_mutex_in;
void function(TCOD_mutex_t) TCOD_mutex_out;
void function(TCOD_mutex_t) TCOD_mutex_delete;
TCOD_semaphore_t function(int) TCOD_semaphore_new;
void function(TCOD_semaphore_t) TCOD_semaphore_lock;
void function(TCOD_semaphore_t) TCOD_semaphore_unlock;
void function(TCOD_semaphore_t) TCOD_semaphore_delete;
void function(SDL_renderer_t) TCOD_sys_register_SDL_renderer;

// --- tree.d ---
TCOD_tree_t* function() TCOD_tree_new;
void function(TCOD_tree_t*, TCOD_tree_t*) TCOD_tree_add_son;

// --- zip.d ---
TCOD_zip_t function() TCOD_zip_new;
void function(TCOD_zip_t) TCOD_zip_delete;
void function(TCOD_zip_t, char) TCOD_zip_put_char;
void function(TCOD_zip_t, int) TCOD_zip_put_int;
void function(TCOD_zip_t, float) TCOD_zip_put_float;
void function(TCOD_zip_t, charptr) TCOD_zip_put_string;
void function(TCOD_zip_t, TCOD_color_t) TCOD_zip_put_color;
void function(TCOD_zip_t, TCOD_image_t) TCOD_zip_put_image;
void function(TCOD_zip_t, TCOD_console_t) TCOD_zip_put_console;
void function(TCOD_zip_t, int, void*) TCOD_zip_put_data;
int function(TCOD_zip_t, charptr) TCOD_zip_save_to_file;
int function(TCOD_zip_t, charptr) TCOD_zip_load_from_file;
char function(TCOD_zip_t) TCOD_zip_get_char;
int function(TCOD_zip_t) TCOD_zip_get_int;
float function(TCOD_zip_t) TCOD_zip_get_float;
char* function(TCOD_zip_t) TCOD_zip_get_string;
TCOD_color_t function(TCOD_zip_t) TCOD_zip_get_color;
TCOD_image_t function(TCOD_zip_t) TCOD_zip_get_image;
TCOD_console_t function(TCOD_zip_t) TCOD_zip_get_console;
int function(TCOD_zip_t, int, void*) TCOD_zip_get_data;

extern(D):

private HXModule gTCODhandle;

void TCOD_D_Shutdown()
{
    ExeModule_Uninit();
}

void TCOD_D_Init()
{
    if (ExeModule_Init() < 0) {
        throw new Exception("std.loader.ExeModule_Init has failed to initialise.");
    }

    version (Posix) {
        gTCODhandle = ExeModule_Load("./libtcod.so");
    } else {
        gTCODhandle = ExeModule_Load("libtcod.dll");
    }

    assert(gTCODhandle);

    TCOD_line_init = cast(typeof(TCOD_line_init)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line_init");
    assert(TCOD_line_init);
    TCOD_line_step = cast(typeof(TCOD_line_step)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line_step");
    assert(TCOD_line_step);
    TCOD_line = cast(typeof(TCOD_line)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line");
    assert(TCOD_line);
    TCOD_line_init_mt = cast(typeof(TCOD_line_init_mt)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line_init_mt");
    assert(TCOD_line_init_mt);
    TCOD_line_step_mt = cast(typeof(TCOD_line_step_mt)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line_step_mt");
    assert(TCOD_line_step_mt);
    TCOD_line_mt = cast(typeof(TCOD_line_mt)) ExeModule_GetSymbol(gTCODhandle, "TCOD_line_mt");
    assert(TCOD_line_mt);
    TCOD_bsp_new = cast(typeof(TCOD_bsp_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_new");
    assert(TCOD_bsp_new);
    TCOD_bsp_new_with_size = cast(typeof(TCOD_bsp_new_with_size)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_new_with_size");
    assert(TCOD_bsp_new_with_size);
    TCOD_bsp_delete = cast(typeof(TCOD_bsp_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_delete");
    assert(TCOD_bsp_delete);
    TCOD_bsp_left = cast(typeof(TCOD_bsp_left)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_left");
    assert(TCOD_bsp_left);
    TCOD_bsp_right = cast(typeof(TCOD_bsp_right)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_right");
    assert(TCOD_bsp_right);
    TCOD_bsp_father = cast(typeof(TCOD_bsp_father)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_father");
    assert(TCOD_bsp_father);
    TCOD_bsp_is_leaf = cast(typeof(TCOD_bsp_is_leaf)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_is_leaf");
    assert(TCOD_bsp_is_leaf);
    TCOD_bsp_traverse_pre_order = cast(typeof(TCOD_bsp_traverse_pre_order)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_traverse_pre_order");
    assert(TCOD_bsp_traverse_pre_order);
    TCOD_bsp_traverse_in_order = cast(typeof(TCOD_bsp_traverse_in_order)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_traverse_in_order");
    assert(TCOD_bsp_traverse_in_order);
    TCOD_bsp_traverse_post_order = cast(typeof(TCOD_bsp_traverse_post_order)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_traverse_post_order");
    assert(TCOD_bsp_traverse_post_order);
    TCOD_bsp_traverse_level_order = cast(typeof(TCOD_bsp_traverse_level_order)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_traverse_level_order");
    assert(TCOD_bsp_traverse_level_order);
    TCOD_bsp_traverse_inverted_level_order = cast(typeof(TCOD_bsp_traverse_inverted_level_order)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_traverse_inverted_level_order");
    assert(TCOD_bsp_traverse_inverted_level_order);
    TCOD_bsp_contains = cast(typeof(TCOD_bsp_contains)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_contains");
    assert(TCOD_bsp_contains);
    TCOD_bsp_resize = cast(typeof(TCOD_bsp_resize)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_resize");
    assert(TCOD_bsp_resize);
    TCOD_bsp_split_once = cast(typeof(TCOD_bsp_split_once)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_split_once");
    assert(TCOD_bsp_split_once);
    TCOD_bsp_split_recursive = cast(typeof(TCOD_bsp_split_recursive)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_split_recursive");
    assert(TCOD_bsp_split_recursive);
    TCOD_bsp_remove_sons = cast(typeof(TCOD_bsp_remove_sons)) ExeModule_GetSymbol(gTCODhandle, "TCOD_bsp_remove_sons");
    assert(TCOD_bsp_remove_sons);
    TCOD_color_equals = cast(typeof(TCOD_color_equals)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_equals");
    assert(TCOD_color_equals);
    TCOD_color_add = cast(typeof(TCOD_color_add)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_add");
    assert(TCOD_color_add);
    TCOD_color_subtract = cast(typeof(TCOD_color_subtract)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_subtract");
    assert(TCOD_color_subtract);
    TCOD_color_multiply = cast(typeof(TCOD_color_multiply)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_multiply");
    assert(TCOD_color_multiply);
    TCOD_color_multiply_scalar = cast(typeof(TCOD_color_multiply_scalar)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_multiply_scalar");
    assert(TCOD_color_multiply_scalar);
    TCOD_color_lerp = cast(typeof(TCOD_color_lerp)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_lerp");
    assert(TCOD_color_lerp);
    TCOD_color_set_HSV = cast(typeof(TCOD_color_set_HSV)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_set_HSV");
    assert(TCOD_color_set_HSV);
    TCOD_color_get_HSV = cast(typeof(TCOD_color_get_HSV)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_get_HSV");
    assert(TCOD_color_get_HSV);
    TCOD_color_gen_map = cast(typeof(TCOD_color_gen_map)) ExeModule_GetSymbol(gTCODhandle, "TCOD_color_gen_map");
    assert(TCOD_color_gen_map);
    TCOD_console_init_root = cast(typeof(TCOD_console_init_root)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_init_root");
    assert(TCOD_console_init_root);
    TCOD_console_set_window_title = cast(typeof(TCOD_console_set_window_title)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_window_title");
    assert(TCOD_console_set_window_title);
    TCOD_console_set_fullscreen = cast(typeof(TCOD_console_set_fullscreen)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_fullscreen");
    assert(TCOD_console_set_fullscreen);
    TCOD_console_is_fullscreen = cast(typeof(TCOD_console_is_fullscreen)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_is_fullscreen");
    assert(TCOD_console_is_fullscreen);
    TCOD_console_is_window_closed = cast(typeof(TCOD_console_is_window_closed)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_is_window_closed");
    assert(TCOD_console_is_window_closed);
    TCOD_console_set_custom_font = cast(typeof(TCOD_console_set_custom_font)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_custom_font");
    assert(TCOD_console_set_custom_font);
    TCOD_console_map_ascii_code_to_font = cast(typeof(TCOD_console_map_ascii_code_to_font)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_map_ascii_code_to_font");
    assert(TCOD_console_map_ascii_code_to_font);
    TCOD_console_map_ascii_codes_to_font = cast(typeof(TCOD_console_map_ascii_codes_to_font)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_map_ascii_codes_to_font");
    assert(TCOD_console_map_ascii_codes_to_font);
    TCOD_console_map_string_to_font = cast(typeof(TCOD_console_map_string_to_font)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_map_string_to_font");
    assert(TCOD_console_map_string_to_font);
    TCOD_console_set_background_color = cast(typeof(TCOD_console_set_background_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_background_color");
    assert(TCOD_console_set_background_color);
    TCOD_console_set_foreground_color = cast(typeof(TCOD_console_set_foreground_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_foreground_color");
    assert(TCOD_console_set_foreground_color);
    TCOD_console_clear = cast(typeof(TCOD_console_clear)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_clear");
    assert(TCOD_console_clear);
    TCOD_console_set_back = cast(typeof(TCOD_console_set_back)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_back");
    assert(TCOD_console_set_back);
    TCOD_console_set_fore = cast(typeof(TCOD_console_set_fore)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_fore");
    assert(TCOD_console_set_fore);
    TCOD_console_set_char = cast(typeof(TCOD_console_set_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_char");
    assert(TCOD_console_set_char);
    TCOD_console_put_char = cast(typeof(TCOD_console_put_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_put_char");
    assert(TCOD_console_put_char);
    TCOD_console_print_left = cast(typeof(TCOD_console_print_left)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_left");
    assert(TCOD_console_print_left);
    TCOD_console_print_right = cast(typeof(TCOD_console_print_right)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_right");
    assert(TCOD_console_print_right);
    TCOD_console_print_center = cast(typeof(TCOD_console_print_center)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_center");
    assert(TCOD_console_print_center);
    TCOD_console_print_left_rect = cast(typeof(TCOD_console_print_left_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_left_rect");
    assert(TCOD_console_print_left_rect);
    TCOD_console_print_right_rect = cast(typeof(TCOD_console_print_right_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_right_rect");
    assert(TCOD_console_print_right_rect);
    TCOD_console_print_center_rect = cast(typeof(TCOD_console_print_center_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_center_rect");
    assert(TCOD_console_print_center_rect);
    TCOD_console_height_left_rect = cast(typeof(TCOD_console_height_left_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_height_left_rect");
    assert(TCOD_console_height_left_rect);
    TCOD_console_height_right_rect = cast(typeof(TCOD_console_height_right_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_height_right_rect");
    assert(TCOD_console_height_right_rect);
    TCOD_console_height_center_rect = cast(typeof(TCOD_console_height_center_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_height_center_rect");
    assert(TCOD_console_height_center_rect);
    TCOD_console_rect = cast(typeof(TCOD_console_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_rect");
    assert(TCOD_console_rect);
    TCOD_console_hline = cast(typeof(TCOD_console_hline)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_hline");
    assert(TCOD_console_hline);
    TCOD_console_vline = cast(typeof(TCOD_console_vline)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_vline");
    assert(TCOD_console_vline);
    TCOD_console_print_frame = cast(typeof(TCOD_console_print_frame)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_print_frame");
    assert(TCOD_console_print_frame);
    TCOD_console_get_background_color = cast(typeof(TCOD_console_get_background_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_background_color");
    assert(TCOD_console_get_background_color);
    TCOD_console_get_foreground_color = cast(typeof(TCOD_console_get_foreground_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_foreground_color");
    assert(TCOD_console_get_foreground_color);
    TCOD_console_get_back = cast(typeof(TCOD_console_get_back)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_back");
    assert(TCOD_console_get_back);
    TCOD_console_get_fore = cast(typeof(TCOD_console_get_fore)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_fore");
    assert(TCOD_console_get_fore);
    TCOD_console_get_char = cast(typeof(TCOD_console_get_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_char");
    assert(TCOD_console_get_char);
    TCOD_console_set_fade = cast(typeof(TCOD_console_set_fade)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_fade");
    assert(TCOD_console_set_fade);
    TCOD_console_get_fade = cast(typeof(TCOD_console_get_fade)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_fade");
    assert(TCOD_console_get_fade);
    TCOD_console_get_fading_color = cast(typeof(TCOD_console_get_fading_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_fading_color");
    assert(TCOD_console_get_fading_color);
    TCOD_console_flush = cast(typeof(TCOD_console_flush)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_flush");
    assert(TCOD_console_flush);
    TCOD_console_set_color_control = cast(typeof(TCOD_console_set_color_control)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_color_control");
    assert(TCOD_console_set_color_control);
    TCOD_console_check_for_keypress = cast(typeof(TCOD_console_check_for_keypress)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_check_for_keypress");
    assert(TCOD_console_check_for_keypress);
    TCOD_console_wait_for_keypress = cast(typeof(TCOD_console_wait_for_keypress)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_wait_for_keypress");
    assert(TCOD_console_wait_for_keypress);
    TCOD_console_set_keyboard_repeat = cast(typeof(TCOD_console_set_keyboard_repeat)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_keyboard_repeat");
    assert(TCOD_console_set_keyboard_repeat);
    TCOD_console_disable_keyboard_repeat = cast(typeof(TCOD_console_disable_keyboard_repeat)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_disable_keyboard_repeat");
    assert(TCOD_console_disable_keyboard_repeat);
    TCOD_console_is_key_pressed = cast(typeof(TCOD_console_is_key_pressed)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_is_key_pressed");
    assert(TCOD_console_is_key_pressed);
    TCOD_console_new = cast(typeof(TCOD_console_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_new");
    assert(TCOD_console_new);
    TCOD_console_get_width = cast(typeof(TCOD_console_get_width)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_width");
    assert(TCOD_console_get_width);
    TCOD_console_get_height = cast(typeof(TCOD_console_get_height)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_get_height");
    assert(TCOD_console_get_height);
    TCOD_console_set_key_color = cast(typeof(TCOD_console_set_key_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_set_key_color");
    assert(TCOD_console_set_key_color);
    TCOD_console_blit = cast(typeof(TCOD_console_blit)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_blit");
    assert(TCOD_console_blit);
    TCOD_console_delete = cast(typeof(TCOD_console_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_delete");
    assert(TCOD_console_delete);
    TCOD_console_credits = cast(typeof(TCOD_console_credits)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_credits");
    assert(TCOD_console_credits);
    TCOD_console_credits_render = cast(typeof(TCOD_console_credits_render)) ExeModule_GetSymbol(gTCODhandle, "TCOD_console_credits_render");
    assert(TCOD_console_credits_render);
    TCOD_map_new = cast(typeof(TCOD_map_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_new");
    assert(TCOD_map_new);
    TCOD_map_clear = cast(typeof(TCOD_map_clear)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_clear");
    assert(TCOD_map_clear);
    TCOD_map_copy = cast(typeof(TCOD_map_copy)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_copy");
    assert(TCOD_map_copy);
    TCOD_map_set_properties = cast(typeof(TCOD_map_set_properties)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_set_properties");
    assert(TCOD_map_set_properties);
    TCOD_map_delete = cast(typeof(TCOD_map_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_delete");
    assert(TCOD_map_delete);
    TCOD_map_compute_fov = cast(typeof(TCOD_map_compute_fov)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_compute_fov");
    assert(TCOD_map_compute_fov);
    TCOD_map_is_in_fov = cast(typeof(TCOD_map_is_in_fov)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_is_in_fov");
    assert(TCOD_map_is_in_fov);
    TCOD_map_set_in_fov = cast(typeof(TCOD_map_set_in_fov)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_set_in_fov");
    assert(TCOD_map_set_in_fov);
    TCOD_map_is_transparent = cast(typeof(TCOD_map_is_transparent)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_is_transparent");
    assert(TCOD_map_is_transparent);
    TCOD_map_is_walkable = cast(typeof(TCOD_map_is_walkable)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_is_walkable");
    assert(TCOD_map_is_walkable);
    TCOD_map_get_width = cast(typeof(TCOD_map_get_width)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_get_width");
    assert(TCOD_map_get_width);
    TCOD_map_get_height = cast(typeof(TCOD_map_get_height)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_get_height");
    assert(TCOD_map_get_height);
    TCOD_map_get_nb_cells = cast(typeof(TCOD_map_get_nb_cells)) ExeModule_GetSymbol(gTCODhandle, "TCOD_map_get_nb_cells");
    assert(TCOD_map_get_nb_cells);
    TCOD_heightmap_new = cast(typeof(TCOD_heightmap_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_new");
    assert(TCOD_heightmap_new);
    TCOD_heightmap_delete = cast(typeof(TCOD_heightmap_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_delete");
    assert(TCOD_heightmap_delete);
    TCOD_heightmap_get_value = cast(typeof(TCOD_heightmap_get_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_get_value");
    assert(TCOD_heightmap_get_value);
    TCOD_heightmap_get_interpolated_value = cast(typeof(TCOD_heightmap_get_interpolated_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_get_interpolated_value");
    assert(TCOD_heightmap_get_interpolated_value);
    TCOD_heightmap_set_value = cast(typeof(TCOD_heightmap_set_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_set_value");
    assert(TCOD_heightmap_set_value);
    TCOD_heightmap_get_slope = cast(typeof(TCOD_heightmap_get_slope)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_get_slope");
    assert(TCOD_heightmap_get_slope);
    TCOD_heightmap_get_normal = cast(typeof(TCOD_heightmap_get_normal)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_get_normal");
    assert(TCOD_heightmap_get_normal);
    TCOD_heightmap_count_cells = cast(typeof(TCOD_heightmap_count_cells)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_count_cells");
    assert(TCOD_heightmap_count_cells);
    TCOD_heightmap_has_land_on_border = cast(typeof(TCOD_heightmap_has_land_on_border)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_has_land_on_border");
    assert(TCOD_heightmap_has_land_on_border);
    TCOD_heightmap_get_minmax = cast(typeof(TCOD_heightmap_get_minmax)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_get_minmax");
    assert(TCOD_heightmap_get_minmax);
    TCOD_heightmap_add = cast(typeof(TCOD_heightmap_add)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_add");
    assert(TCOD_heightmap_add);
    TCOD_heightmap_scale = cast(typeof(TCOD_heightmap_scale)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_scale");
    assert(TCOD_heightmap_scale);
    TCOD_heightmap_clamp = cast(typeof(TCOD_heightmap_clamp)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_clamp");
    assert(TCOD_heightmap_clamp);
    TCOD_heightmap_normalize = cast(typeof(TCOD_heightmap_normalize)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_normalize");
    assert(TCOD_heightmap_normalize);
    TCOD_heightmap_clear = cast(typeof(TCOD_heightmap_clear)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_clear");
    assert(TCOD_heightmap_clear);
    TCOD_heightmap_lerp_hm = cast(typeof(TCOD_heightmap_lerp_hm)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_lerp_hm");
    assert(TCOD_heightmap_lerp_hm);
    TCOD_heightmap_add_hm = cast(typeof(TCOD_heightmap_add_hm)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_add_hm");
    assert(TCOD_heightmap_add_hm);
    TCOD_heightmap_multiply_hm = cast(typeof(TCOD_heightmap_multiply_hm)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_multiply_hm");
    assert(TCOD_heightmap_multiply_hm);
    TCOD_heightmap_add_hill = cast(typeof(TCOD_heightmap_add_hill)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_add_hill");
    assert(TCOD_heightmap_add_hill);
    TCOD_heightmap_dig_hill = cast(typeof(TCOD_heightmap_dig_hill)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_dig_hill");
    assert(TCOD_heightmap_dig_hill);
    TCOD_heightmap_dig_bezier = cast(typeof(TCOD_heightmap_dig_bezier)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_dig_bezier");
    assert(TCOD_heightmap_dig_bezier);
    TCOD_heightmap_rain_erosion = cast(typeof(TCOD_heightmap_rain_erosion)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_rain_erosion");
    assert(TCOD_heightmap_rain_erosion);
    TCOD_heightmap_kernel_transform = cast(typeof(TCOD_heightmap_kernel_transform)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_kernel_transform");
    assert(TCOD_heightmap_kernel_transform);
    TCOD_heightmap_add_voronoi = cast(typeof(TCOD_heightmap_add_voronoi)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_add_voronoi");
    assert(TCOD_heightmap_add_voronoi);
    TCOD_heightmap_add_fbm = cast(typeof(TCOD_heightmap_add_fbm)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_add_fbm");
    assert(TCOD_heightmap_add_fbm);
    TCOD_heightmap_scale_fbm = cast(typeof(TCOD_heightmap_scale_fbm)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_scale_fbm");
    assert(TCOD_heightmap_scale_fbm);
    TCOD_heightmap_islandify = cast(typeof(TCOD_heightmap_islandify)) ExeModule_GetSymbol(gTCODhandle, "TCOD_heightmap_islandify");
    assert(TCOD_heightmap_islandify);
    TCOD_image_new = cast(typeof(TCOD_image_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_new");
    assert(TCOD_image_new);
    TCOD_image_from_console = cast(typeof(TCOD_image_from_console)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_from_console");
    assert(TCOD_image_from_console);
    TCOD_image_refresh_console = cast(typeof(TCOD_image_refresh_console)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_refresh_console");
    assert(TCOD_image_refresh_console);
    TCOD_image_load = cast(typeof(TCOD_image_load)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_load");
    assert(TCOD_image_load);
    TCOD_image_clear = cast(typeof(TCOD_image_clear)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_clear");
    assert(TCOD_image_clear);
    TCOD_image_invert = cast(typeof(TCOD_image_invert)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_invert");
    assert(TCOD_image_invert);
    TCOD_image_hflip = cast(typeof(TCOD_image_hflip)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_hflip");
    assert(TCOD_image_hflip);
    TCOD_image_vflip = cast(typeof(TCOD_image_vflip)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_vflip");
    assert(TCOD_image_vflip);
    TCOD_image_scale = cast(typeof(TCOD_image_scale)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_scale");
    assert(TCOD_image_scale);
    TCOD_image_save = cast(typeof(TCOD_image_save)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_save");
    assert(TCOD_image_save);
    TCOD_image_get_size = cast(typeof(TCOD_image_get_size)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_get_size");
    assert(TCOD_image_get_size);
    TCOD_image_get_pixel = cast(typeof(TCOD_image_get_pixel)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_get_pixel");
    assert(TCOD_image_get_pixel);
    TCOD_image_get_alpha = cast(typeof(TCOD_image_get_alpha)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_get_alpha");
    assert(TCOD_image_get_alpha);
    TCOD_image_get_mipmap_pixel = cast(typeof(TCOD_image_get_mipmap_pixel)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_get_mipmap_pixel");
    assert(TCOD_image_get_mipmap_pixel);
    TCOD_image_put_pixel = cast(typeof(TCOD_image_put_pixel)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_put_pixel");
    assert(TCOD_image_put_pixel);
    TCOD_image_blit = cast(typeof(TCOD_image_blit)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_blit");
    assert(TCOD_image_blit);
    TCOD_image_blit_rect = cast(typeof(TCOD_image_blit_rect)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_blit_rect");
    assert(TCOD_image_blit_rect);
    TCOD_image_delete = cast(typeof(TCOD_image_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_delete");
    assert(TCOD_image_delete);
    TCOD_image_set_key_color = cast(typeof(TCOD_image_set_key_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_set_key_color");
    assert(TCOD_image_set_key_color);
    TCOD_image_is_pixel_transparent = cast(typeof(TCOD_image_is_pixel_transparent)) ExeModule_GetSymbol(gTCODhandle, "TCOD_image_is_pixel_transparent");
    assert(TCOD_image_is_pixel_transparent);
    TCOD_lex_new_intern = cast(typeof(TCOD_lex_new_intern)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_new_intern");
    assert(TCOD_lex_new_intern);
    TCOD_lex_new = cast(typeof(TCOD_lex_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_new");
    assert(TCOD_lex_new);
    TCOD_lex_delete = cast(typeof(TCOD_lex_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_delete");
    assert(TCOD_lex_delete);
    TCOD_lex_set_data_buffer = cast(typeof(TCOD_lex_set_data_buffer)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_set_data_buffer");
    assert(TCOD_lex_set_data_buffer);
    TCOD_lex_set_data_file = cast(typeof(TCOD_lex_set_data_file)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_set_data_file");
    assert(TCOD_lex_set_data_file);
    TCOD_lex_parse = cast(typeof(TCOD_lex_parse)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_parse");
    assert(TCOD_lex_parse);
    TCOD_lex_parse_until_token_type = cast(typeof(TCOD_lex_parse_until_token_type)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_parse_until_token_type");
    assert(TCOD_lex_parse_until_token_type);
    TCOD_lex_parse_until_token_value = cast(typeof(TCOD_lex_parse_until_token_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_parse_until_token_value");
    assert(TCOD_lex_parse_until_token_value);
    TCOD_lex_expect_token_value = cast(typeof(TCOD_lex_expect_token_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_expect_token_value");
    assert(TCOD_lex_expect_token_value);
    TCOD_lex_savepoint = cast(typeof(TCOD_lex_savepoint)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_savepoint");
    assert(TCOD_lex_savepoint);
    TCOD_lex_restore = cast(typeof(TCOD_lex_restore)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_restore");
    assert(TCOD_lex_restore);
    TCOD_lex_get_last_javadoc = cast(typeof(TCOD_lex_get_last_javadoc)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_get_last_javadoc");
    assert(TCOD_lex_get_last_javadoc);
    TCOD_lex_get_token_name = cast(typeof(TCOD_lex_get_token_name)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_get_token_name");
    assert(TCOD_lex_get_token_name);
    TCOD_lex_get_last_error = cast(typeof(TCOD_lex_get_last_error)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_get_last_error");
    assert(TCOD_lex_get_last_error);
    TCOD_lex_hextoint = cast(typeof(TCOD_lex_hextoint)) ExeModule_GetSymbol(gTCODhandle, "TCOD_lex_hextoint");
    assert(TCOD_lex_hextoint);
    TCOD_list_new = cast(typeof(TCOD_list_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_new");
    assert(TCOD_list_new);
    TCOD_list_allocate = cast(typeof(TCOD_list_allocate)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_allocate");
    assert(TCOD_list_allocate);
    TCOD_list_duplicate = cast(typeof(TCOD_list_duplicate)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_duplicate");
    assert(TCOD_list_duplicate);
    TCOD_list_delete = cast(typeof(TCOD_list_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_delete");
    assert(TCOD_list_delete);
    TCOD_list_push = cast(typeof(TCOD_list_push)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_push");
    assert(TCOD_list_push);
    TCOD_list_pop = cast(typeof(TCOD_list_pop)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_pop");
    assert(TCOD_list_pop);
    TCOD_list_peek = cast(typeof(TCOD_list_peek)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_peek");
    assert(TCOD_list_peek);
    TCOD_list_add_all = cast(typeof(TCOD_list_add_all)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_add_all");
    assert(TCOD_list_add_all);
    TCOD_list_get = cast(typeof(TCOD_list_get)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_get");
    assert(TCOD_list_get);
    TCOD_list_set = cast(typeof(TCOD_list_set)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_set");
    assert(TCOD_list_set);
    TCOD_list_begin = cast(typeof(TCOD_list_begin)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_begin");
    assert(TCOD_list_begin);
    TCOD_list_end = cast(typeof(TCOD_list_end)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_end");
    assert(TCOD_list_end);
    TCOD_list_remove_iterator = cast(typeof(TCOD_list_remove_iterator)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_remove_iterator");
    assert(TCOD_list_remove_iterator);
    TCOD_list_remove = cast(typeof(TCOD_list_remove)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_remove");
    assert(TCOD_list_remove);
    TCOD_list_remove_iterator_fast = cast(typeof(TCOD_list_remove_iterator_fast)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_remove_iterator_fast");
    assert(TCOD_list_remove_iterator_fast);
    TCOD_list_contains = cast(typeof(TCOD_list_contains)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_contains");
    assert(TCOD_list_contains);
    TCOD_list_clear = cast(typeof(TCOD_list_clear)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_clear");
    assert(TCOD_list_clear);
    TCOD_list_clear_and_delete = cast(typeof(TCOD_list_clear_and_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_clear_and_delete");
    assert(TCOD_list_clear_and_delete);
    TCOD_list_size = cast(typeof(TCOD_list_size)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_size");
    assert(TCOD_list_size);
    TCOD_list_insert_before = cast(typeof(TCOD_list_insert_before)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_insert_before");
    assert(TCOD_list_insert_before);
    TCOD_list_is_empty = cast(typeof(TCOD_list_is_empty)) ExeModule_GetSymbol(gTCODhandle, "TCOD_list_is_empty");
    assert(TCOD_list_is_empty);
    TCOD_random_get_instance = cast(typeof(TCOD_random_get_instance)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_get_instance");
    assert(TCOD_random_get_instance);
    TCOD_random_new = cast(typeof(TCOD_random_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_new");
    assert(TCOD_random_new);
    TCOD_random_save = cast(typeof(TCOD_random_save)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_save");
    assert(TCOD_random_save);
    TCOD_random_restore = cast(typeof(TCOD_random_restore)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_restore");
    assert(TCOD_random_restore);
    TCOD_random_new_from_seed = cast(typeof(TCOD_random_new_from_seed)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_new_from_seed");
    assert(TCOD_random_new_from_seed);
    TCOD_random_get_int = cast(typeof(TCOD_random_get_int)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_get_int");
    assert(TCOD_random_get_int);
    TCOD_random_get_float = cast(typeof(TCOD_random_get_float)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_get_float");
    assert(TCOD_random_get_float);
    TCOD_random_get_int_from_byte_array = cast(typeof(TCOD_random_get_int_from_byte_array)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_get_int_from_byte_array");
    assert(TCOD_random_get_int_from_byte_array);
    TCOD_random_delete = cast(typeof(TCOD_random_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_random_delete");
    assert(TCOD_random_delete);
    TCOD_mouse_get_status = cast(typeof(TCOD_mouse_get_status)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mouse_get_status");
    assert(TCOD_mouse_get_status);
    TCOD_mouse_show_cursor = cast(typeof(TCOD_mouse_show_cursor)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mouse_show_cursor");
    assert(TCOD_mouse_show_cursor);
    TCOD_mouse_is_cursor_visible = cast(typeof(TCOD_mouse_is_cursor_visible)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mouse_is_cursor_visible");
    assert(TCOD_mouse_is_cursor_visible);
    TCOD_mouse_move = cast(typeof(TCOD_mouse_move)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mouse_move");
    assert(TCOD_mouse_move);
    TCOD_noise_new = cast(typeof(TCOD_noise_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_new");
    assert(TCOD_noise_new);
    TCOD_noise_perlin = cast(typeof(TCOD_noise_perlin)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_perlin");
    assert(TCOD_noise_perlin);
    TCOD_noise_fbm_perlin = cast(typeof(TCOD_noise_fbm_perlin)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_fbm_perlin");
    assert(TCOD_noise_fbm_perlin);
    TCOD_noise_turbulence_perlin = cast(typeof(TCOD_noise_turbulence_perlin)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_turbulence_perlin");
    assert(TCOD_noise_turbulence_perlin);
    TCOD_noise_simplex = cast(typeof(TCOD_noise_simplex)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_simplex");
    assert(TCOD_noise_simplex);
    TCOD_noise_fbm_simplex = cast(typeof(TCOD_noise_fbm_simplex)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_fbm_simplex");
    assert(TCOD_noise_fbm_simplex);
    TCOD_noise_turbulence_simplex = cast(typeof(TCOD_noise_turbulence_simplex)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_turbulence_simplex");
    assert(TCOD_noise_turbulence_simplex);
    TCOD_noise_wavelet = cast(typeof(TCOD_noise_wavelet)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_wavelet");
    assert(TCOD_noise_wavelet);
    TCOD_noise_fbm_wavelet = cast(typeof(TCOD_noise_fbm_wavelet)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_fbm_wavelet");
    assert(TCOD_noise_fbm_wavelet);
    TCOD_noise_turbulence_wavelet = cast(typeof(TCOD_noise_turbulence_wavelet)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_turbulence_wavelet");
    assert(TCOD_noise_turbulence_wavelet);
    TCOD_noise_delete = cast(typeof(TCOD_noise_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_noise_delete");
    assert(TCOD_noise_delete);
    TCOD_struct_get_name = cast(typeof(TCOD_struct_get_name)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_get_name");
    assert(TCOD_struct_get_name);
    TCOD_struct_add_property = cast(typeof(TCOD_struct_add_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_property");
    assert(TCOD_struct_add_property);
    TCOD_struct_add_list_property = cast(typeof(TCOD_struct_add_list_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_list_property");
    assert(TCOD_struct_add_list_property);
    TCOD_struct_add_value_list = cast(typeof(TCOD_struct_add_value_list)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_value_list");
    assert(TCOD_struct_add_value_list);
    TCOD_struct_add_value_list_sized = cast(typeof(TCOD_struct_add_value_list_sized)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_value_list_sized");
    assert(TCOD_struct_add_value_list_sized);
    TCOD_struct_add_flag = cast(typeof(TCOD_struct_add_flag)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_flag");
    assert(TCOD_struct_add_flag);
    TCOD_struct_add_structure = cast(typeof(TCOD_struct_add_structure)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_add_structure");
    assert(TCOD_struct_add_structure);
    TCOD_struct_is_mandatory = cast(typeof(TCOD_struct_is_mandatory)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_is_mandatory");
    assert(TCOD_struct_is_mandatory);
    TCOD_struct_get_type = cast(typeof(TCOD_struct_get_type)) ExeModule_GetSymbol(gTCODhandle, "TCOD_struct_get_type");
    assert(TCOD_struct_get_type);
    TCOD_parser_new = cast(typeof(TCOD_parser_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_new");
    assert(TCOD_parser_new);
    TCOD_parser_new_struct = cast(typeof(TCOD_parser_new_struct)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_new_struct");
    assert(TCOD_parser_new_struct);
    TCOD_parser_new_custom_type = cast(typeof(TCOD_parser_new_custom_type)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_new_custom_type");
    assert(TCOD_parser_new_custom_type);
    TCOD_parser_run = cast(typeof(TCOD_parser_run)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_run");
    assert(TCOD_parser_run);
    TCOD_parser_delete = cast(typeof(TCOD_parser_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_delete");
    assert(TCOD_parser_delete);
    TCOD_parser_error = cast(typeof(TCOD_parser_error)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_error");
    assert(TCOD_parser_error);
    TCOD_parser_get_bool_property = cast(typeof(TCOD_parser_get_bool_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_bool_property");
    assert(TCOD_parser_get_bool_property);
    TCOD_parser_get_char_property = cast(typeof(TCOD_parser_get_char_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_char_property");
    assert(TCOD_parser_get_char_property);
    TCOD_parser_get_int_property = cast(typeof(TCOD_parser_get_int_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_int_property");
    assert(TCOD_parser_get_int_property);
    TCOD_parser_get_float_property = cast(typeof(TCOD_parser_get_float_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_float_property");
    assert(TCOD_parser_get_float_property);
    TCOD_parser_get_string_property = cast(typeof(TCOD_parser_get_string_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_string_property");
    assert(TCOD_parser_get_string_property);
    TCOD_parser_get_color_property = cast(typeof(TCOD_parser_get_color_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_color_property");
    assert(TCOD_parser_get_color_property);
    TCOD_parser_get_dice_property = cast(typeof(TCOD_parser_get_dice_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_dice_property");
    assert(TCOD_parser_get_dice_property);
    TCOD_parser_get_dice_property_py = cast(typeof(TCOD_parser_get_dice_property_py)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_dice_property_py");
    assert(TCOD_parser_get_dice_property_py);
    TCOD_parser_get_custom_property = cast(typeof(TCOD_parser_get_custom_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_custom_property");
    assert(TCOD_parser_get_custom_property);
    TCOD_parser_get_list_property = cast(typeof(TCOD_parser_get_list_property)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parser_get_list_property");
    assert(TCOD_parser_get_list_property);
    TCOD_parse_bool_value = cast(typeof(TCOD_parse_bool_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_bool_value");
    assert(TCOD_parse_bool_value);
    TCOD_parse_char_value = cast(typeof(TCOD_parse_char_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_char_value");
    assert(TCOD_parse_char_value);
    TCOD_parse_integer_value = cast(typeof(TCOD_parse_integer_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_integer_value");
    assert(TCOD_parse_integer_value);
    TCOD_parse_float_value = cast(typeof(TCOD_parse_float_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_float_value");
    assert(TCOD_parse_float_value);
    TCOD_parse_string_value = cast(typeof(TCOD_parse_string_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_string_value");
    assert(TCOD_parse_string_value);
    TCOD_parse_color_value = cast(typeof(TCOD_parse_color_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_color_value");
    assert(TCOD_parse_color_value);
    TCOD_parse_dice_value = cast(typeof(TCOD_parse_dice_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_dice_value");
    assert(TCOD_parse_dice_value);
    TCOD_parse_value_list_value = cast(typeof(TCOD_parse_value_list_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_value_list_value");
    assert(TCOD_parse_value_list_value);
    TCOD_parse_property_value = cast(typeof(TCOD_parse_property_value)) ExeModule_GetSymbol(gTCODhandle, "TCOD_parse_property_value");
    assert(TCOD_parse_property_value);
    TCOD_path_new_using_map = cast(typeof(TCOD_path_new_using_map)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_new_using_map");
    assert(TCOD_path_new_using_map);
    TCOD_path_new_using_function = cast(typeof(TCOD_path_new_using_function)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_new_using_function");
    assert(TCOD_path_new_using_function);
    TCOD_path_compute = cast(typeof(TCOD_path_compute)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_compute");
    assert(TCOD_path_compute);
    TCOD_path_walk = cast(typeof(TCOD_path_walk)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_walk");
    assert(TCOD_path_walk);
    TCOD_path_is_empty = cast(typeof(TCOD_path_is_empty)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_is_empty");
    assert(TCOD_path_is_empty);
    TCOD_path_size = cast(typeof(TCOD_path_size)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_size");
    assert(TCOD_path_size);
    TCOD_path_get = cast(typeof(TCOD_path_get)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_get");
    assert(TCOD_path_get);
    TCOD_path_get_origin = cast(typeof(TCOD_path_get_origin)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_get_origin");
    assert(TCOD_path_get_origin);
    TCOD_path_get_destination = cast(typeof(TCOD_path_get_destination)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_get_destination");
    assert(TCOD_path_get_destination);
    TCOD_path_delete = cast(typeof(TCOD_path_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_path_delete");
    assert(TCOD_path_delete);
    TCOD_sys_elapsed_milli = cast(typeof(TCOD_sys_elapsed_milli)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_elapsed_milli");
    assert(TCOD_sys_elapsed_milli);
    TCOD_sys_elapsed_seconds = cast(typeof(TCOD_sys_elapsed_seconds)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_elapsed_seconds");
    assert(TCOD_sys_elapsed_seconds);
    TCOD_sys_sleep_milli = cast(typeof(TCOD_sys_sleep_milli)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_sleep_milli");
    assert(TCOD_sys_sleep_milli);
    TCOD_sys_save_screenshot = cast(typeof(TCOD_sys_save_screenshot)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_save_screenshot");
    assert(TCOD_sys_save_screenshot);
    TCOD_sys_force_fullscreen_resolution = cast(typeof(TCOD_sys_force_fullscreen_resolution)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_force_fullscreen_resolution");
    assert(TCOD_sys_force_fullscreen_resolution);
    TCOD_sys_set_fps = cast(typeof(TCOD_sys_set_fps)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_set_fps");
    assert(TCOD_sys_set_fps);
    TCOD_sys_get_fps = cast(typeof(TCOD_sys_get_fps)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_get_fps");
    assert(TCOD_sys_get_fps);
    TCOD_sys_get_last_frame_length = cast(typeof(TCOD_sys_get_last_frame_length)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_get_last_frame_length");
    assert(TCOD_sys_get_last_frame_length);
    TCOD_sys_get_current_resolution = cast(typeof(TCOD_sys_get_current_resolution)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_get_current_resolution");
    assert(TCOD_sys_get_current_resolution);
    TCOD_sys_update_char = cast(typeof(TCOD_sys_update_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_update_char");
    assert(TCOD_sys_update_char);
    TCOD_sys_create_directory = cast(typeof(TCOD_sys_create_directory)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_create_directory");
    assert(TCOD_sys_create_directory);
    TCOD_sys_delete_file = cast(typeof(TCOD_sys_delete_file)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_delete_file");
    assert(TCOD_sys_delete_file);
    TCOD_sys_delete_directory = cast(typeof(TCOD_sys_delete_directory)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_delete_directory");
    assert(TCOD_sys_delete_directory);
    TCOD_thread_new = cast(typeof(TCOD_thread_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_thread_new");
    assert(TCOD_thread_new);
    TCOD_thread_delete = cast(typeof(TCOD_thread_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_thread_delete");
    assert(TCOD_thread_delete);
    TCOD_sys_get_num_cores = cast(typeof(TCOD_sys_get_num_cores)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_get_num_cores");
    assert(TCOD_sys_get_num_cores);
    TCOD_mutex_new = cast(typeof(TCOD_mutex_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mutex_new");
    assert(TCOD_mutex_new);
    TCOD_mutex_in = cast(typeof(TCOD_mutex_in)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mutex_in");
    assert(TCOD_mutex_in);
    TCOD_mutex_out = cast(typeof(TCOD_mutex_out)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mutex_out");
    assert(TCOD_mutex_out);
    TCOD_mutex_delete = cast(typeof(TCOD_mutex_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_mutex_delete");
    assert(TCOD_mutex_delete);
    TCOD_semaphore_new = cast(typeof(TCOD_semaphore_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_semaphore_new");
    assert(TCOD_semaphore_new);
    TCOD_semaphore_lock = cast(typeof(TCOD_semaphore_lock)) ExeModule_GetSymbol(gTCODhandle, "TCOD_semaphore_lock");
    assert(TCOD_semaphore_lock);
    TCOD_semaphore_unlock = cast(typeof(TCOD_semaphore_unlock)) ExeModule_GetSymbol(gTCODhandle, "TCOD_semaphore_unlock");
    assert(TCOD_semaphore_unlock);
    TCOD_semaphore_delete = cast(typeof(TCOD_semaphore_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_semaphore_delete");
    assert(TCOD_semaphore_delete);
    TCOD_sys_register_SDL_renderer = cast(typeof(TCOD_sys_register_SDL_renderer)) ExeModule_GetSymbol(gTCODhandle, "TCOD_sys_register_SDL_renderer");
    assert(TCOD_sys_register_SDL_renderer);
    TCOD_tree_new = cast(typeof(TCOD_tree_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_tree_new");
    assert(TCOD_tree_new);
    TCOD_tree_add_son = cast(typeof(TCOD_tree_add_son)) ExeModule_GetSymbol(gTCODhandle, "TCOD_tree_add_son");
    assert(TCOD_tree_add_son);

    // These are unasserted for the moment, because they don't load on Windows.
    // You should be using std.zlib, instead! (Or the Tango equivalent).
    TCOD_zip_new = cast(typeof(TCOD_zip_new)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_new");
    //assert(TCOD_zip_new);
    TCOD_zip_delete = cast(typeof(TCOD_zip_delete)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_delete");
    //assert(TCOD_zip_delete);
    TCOD_zip_put_char = cast(typeof(TCOD_zip_put_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_char");
    //assert(TCOD_zip_put_char);
    TCOD_zip_put_int = cast(typeof(TCOD_zip_put_int)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_int");
    //assert(TCOD_zip_put_int);
    TCOD_zip_put_float = cast(typeof(TCOD_zip_put_float)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_float");
    //assert(TCOD_zip_put_float);
    TCOD_zip_put_string = cast(typeof(TCOD_zip_put_string)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_string");
    //assert(TCOD_zip_put_string);
    TCOD_zip_put_color = cast(typeof(TCOD_zip_put_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_color");
    //assert(TCOD_zip_put_color);
    TCOD_zip_put_image = cast(typeof(TCOD_zip_put_image)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_image");
    //assert(TCOD_zip_put_image);
    TCOD_zip_put_console = cast(typeof(TCOD_zip_put_console)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_console");
    //assert(TCOD_zip_put_console);
    TCOD_zip_put_data = cast(typeof(TCOD_zip_put_data)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_put_data");
    //assert(TCOD_zip_put_data);
    TCOD_zip_save_to_file = cast(typeof(TCOD_zip_save_to_file)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_save_to_file");
    //assert(TCOD_zip_save_to_file);
    TCOD_zip_load_from_file = cast(typeof(TCOD_zip_load_from_file)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_load_from_file");
    //assert(TCOD_zip_load_from_file);
    TCOD_zip_get_char = cast(typeof(TCOD_zip_get_char)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_char");
    //assert(TCOD_zip_get_char);
    TCOD_zip_get_int = cast(typeof(TCOD_zip_get_int)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_int");
    //assert(TCOD_zip_get_int);
    TCOD_zip_get_float = cast(typeof(TCOD_zip_get_float)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_float");
    //assert(TCOD_zip_get_float);
    TCOD_zip_get_string = cast(typeof(TCOD_zip_get_string)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_string");
    //assert(TCOD_zip_get_string);
    TCOD_zip_get_color = cast(typeof(TCOD_zip_get_color)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_color");
    //assert(TCOD_zip_get_color);
    TCOD_zip_get_image = cast(typeof(TCOD_zip_get_image)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_image");
    //assert(TCOD_zip_get_image);
    TCOD_zip_get_console = cast(typeof(TCOD_zip_get_console)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_console");
    //assert(TCOD_zip_get_console);
    TCOD_zip_get_data = cast(typeof(TCOD_zip_get_data)) ExeModule_GetSymbol(gTCODhandle, "TCOD_zip_get_data");
    //assert(TCOD_zip_get_data);
}

